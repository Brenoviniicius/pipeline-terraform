name: "Workflow Terraform"

on:
    workflow_call:
        inputs:
            environment:
                type: string
                required: true
            aws-assume-role-arn:
                type: string
                required: true
            aws-statefile-s3-bucket:
                type: string
                required: true
            aws-region:
                type: string
                required: true
            aws-lock-dynamodb-table:
                type: string
                required: true

jobs:
    terraform:
        runs-on: ubuntu-latest

        defaults:
            run:
              shell: bash
    
        steps:
           - name: Checkout code
             uses: actions/checkout@v4

           - name: Setup Terraform
             uses: hashicorp/setup-terraform@v3
             with:
               terraform_version: 1.8.3

           - name: Configure AWS credentials
             uses: aws-actions/configure-aws-credentials@v4
             with: 
                role-to-assume: ${{ inputs.aws-assume-role-arn }}
                role-session-name: Github_to_AWS_via_FederatedOIDC
                aws-region: ${{ inputs.aws-region}}
            
           - name: config terraform
             uses: hashicorp/setup-terraform@v3
             with: 
               terraform_version: 1.11.0
              
           - name: terraform version
             run: terraform version
           
           - name: Verificar arquivos no diretório
             run: ls -la infra/envs/dev/

           - name: Verificar o tfvars no diretório
             run: ls -l ./infra/envs/${{ inputs.environment }}

           
           - name: Inicializar Terraform
             run: terraform init
           
           - name: Selecionar workspace e rodar o Terraform
             run: |
               terraform workspace select dev || terraform workspace new dev
               terraform plan -var-file="./infra/envs/dev/terraform.tfvars" -out="dev.plan"
           

           - name: Terraform Init
             run: |
               cd infra && terraform init \
                -backend-config="bucket=${{ inputs.aws-statefile-s3-bucket }}" \
                -backend-config="key=${{ github.event.repository.name }}" \
                -backend-config="region=${{ inputs.aws-region }}" \
                -backend-config="dynamodb_table=${{ inputs.aws-lock-dynamodb-table }}"
           
           - name: Terraform Validate
             run: terraform validate

           - name: Terraform Plan
             id: terraform-plan
             run: cd infra &&
               terraform workspace select ${{ inputs.environment }} || terraform workspace new ${{ inputs.environment }} && 
               terraform plan -var-file="./envs/${{ inputs.environment }}/terraform.tfvars" -out="${{ inputs.environment }}.plan"
            
           - name: Terraform Apply
             id: terraform-apply
             run: cd infra &&
               terraform workspace select ${{ inputs.environment }} || terraform workspace new ${{ inputs.environment }} &&
               terraform apply "${{ inputs.environment }}.plan"